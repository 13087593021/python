
Python数据爬取及可视化
使用tkinter模块进行图形界面设计
使用pymysql模块连接你本地mysql数据库
整个程序基本能正常运行，但还存在一些问题。


一、环境准备
1.使用wampserver2.5启动mysql数据库。
2.使用Navicat Premium 15管理mysql数据库。
3.使用PyCharm 2020.3.3 x64运行主程序。
 
二、程序运行
1.第一步，在搜索栏中输入要进行数据爬取网页的url。
（1）点击“重置”按钮，输入框会被清空，可重新填入url。
（2）点击“显示”按钮，可快速填入已经保存的url，无需再手动填写。

2.第二步，点击“查找”按钮，
使用re模块进行正则表达式查询，可实现对该url的合法性检验。
使用request模块进行网络请求。
使用webbrowser模块调用本地浏览器访问url。
使用tkinter.messagebox模块进行相应的提示框弹出。
中间的灰色区域会显示程序的实时运行状态。
（1）url的合法性检验。
（2）重定向，将控制台信息转至灰色显示框显示。
（3）若url非法，则会提醒用户重回输入正确的url，并自动清空搜索框。
（4）若url合法，则会打开默认的浏览器访问该url，确保访问的界面正确性。

3.第三步，点击“保存”按钮，网页数据将被保存至一个Excel文档，并导入至数据库中。

4.第四步，点击“视图”按钮，程序将利用数据库中的数据绘制图片，
使用matplotlib模块绘图。每个图片对应一个函数，使用threading模块进行多线程生成图片，
使用time模块对每个线程进行一定时间的休眠。
       
5.第五步，点击左侧下拉栏进行相应图片的展示，有柱状图、折线图、组合图等。
（1）界面中间的正方形灰色区域负责图片展示。
（2）点击下拉框，进行相应事件的处理，调用不同的函数展示不同的图片。
（3）组合图，将柱状图和折线图在一张图上展示。plt.bar()负责生成柱状图, 
plt.plot()负责生成折线图，使用twinx()将两张图合在一起展示。
plt.xticks()
负责将剧名进行旋转
（4）柱状图，plt.bar()负责生成柱状图。
（5）折线图，plt.plot()负责生成折线图。

6.第六步，点击“数据库”按钮，可跳转至数据库操作界面，
使用pymysql模块连接数据库，并进行数据库的相应操作。
默认显示数据库中的所有数据，可通过右侧的滑动栏进行数据的浏览。
 
7.第七步，通过点击不同的标题名，可实现对该列数据的排序。
（1）点击标题进行排序。
（2）按照播放量进行排序（从小到大）。
（3）按照评论数进行排序（从小到大）。
（4）按照收藏数进行排序（从小到大）。

8.第八步，填写最上面输入框的部分内容，通过点击“增加”、“删除”、“查找”、“更改”按钮，
可实现对数据库内容的操作。（点击重置按钮可重新输入）
（1）删除编号为3的数据。
（2）查找编号为5的数据。
（3）更改编号为1的数据。
（4）增加编号为0的数据。